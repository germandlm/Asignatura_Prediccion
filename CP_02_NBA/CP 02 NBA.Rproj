---
title: "CP 02 NBA"
author: "German de los Mozos"
date: "5/11/2020"
output: html_document
---

[//]: Comentario


## Reference

https://bradleyboehmke.github.io/HOML/engineering.html#proper-implementation

# Libraries and functions

```{r Libraries and functions, message=FALSE, warning=FALSE}
library(here) # Comentar
library(tidyverse)
library(janitor) # Limpiar los nombres
library(skimr) # Summarize bonito
library(magrittr) # Pipe operators
library(corrplot) # Correlaciones
library(ggcorrplot)  # Correlacion
library(PerformanceAnalytics) # Correlaciones
library(leaps) # Seleccion de modelo

```



# Read Data

```{r Read Data}
raw_data <-  read.csv("nba.csv")
colnames(raw_data)
```


# Variables Names

```{r}
raw_data %<>% clean_names()
colnames(raw_data)
```


# Summarize Data

```{r Summarise Data}

skim(raw_data)

```

* **Hay dos datos repetidos y varios NA**


# Data Wrangling data

* Data wrangling is the process of cleaning and unifying complex data sets for analysis, in turn boosting productivity within an organization.

```{r Data Wranling}
# delete duplicate
# Remove duplicate rows of the dataframe
raw_data %<>% distinct(player,.keep_all= TRUE)

# delete NA's
raw_data %<>% drop_na()

# Summarise
skim(raw_data)

```



```{r fig.height = 20, fig.width = 4, fig.align = "center"}

raw_data %>% 
  select_at(vars(-c("player","nba_country","tm"))) %>% 
  tidyr::gather("id", "value", 2:25) %>% 
  ggplot(., aes(y=salary, x=value))+
  geom_point()+
  geom_smooth(method = "lm", se=FALSE, color="black")+
  facet_wrap(~id,ncol=2,scales="free_x")
```

```{r fig.height = 20, fig.width = 4, fig.align = "center"}

raw_data %>% 
  select_at(vars(-c("player","nba_country","tm"))) %>% 
  tidyr::gather("id", "value", 2:25) %>% 
  ggplot(., aes(y=log(salary), x=value))+
  geom_point()+
  geom_smooth(method = "lm", se=FALSE, color="black")+
  facet_wrap(~id,ncol=2,scales="free_x")
```

# EDA
## Log salary

```{r Log salary,fig.height = 10, fig.width = 10, fig.align = "center"}

log_data <- raw_data %>% mutate(salary=log(salary))

skim(log_data)
# Excluded vars (factor)

vars <- c("player","nba_country","tm")

# Correlations
corrplot(cor(log_data %>% 
               select_at(vars(-vars)), 
             use = "complete.obs"), 
         method = "circle",type = "upper")

# Other Correlations


ggcorrplot(cor(log_data %>% 
               select_at(vars(-vars)), 
            use = "complete.obs"),
            hc.order = TRUE,
            type = "lower",  lab = TRUE)


```


```{r fig.height = 20, fig.width =20, fig.align = "center"}

# Other Correlations

chart.Correlation(log_data %>% 
               select_at(vars(-vars)),
               histogram=TRUE, pch=19)


```

## VIF

```{r fig.height = 20, fig.width =4, fig.align = "center"}
model_vif <- lm(salary~.-player-nba_country-tm, data=log_data)

vif_values <- car::vif(model_vif)

#create horizontal bar chart to display each VIF value
barplot(vif_values, main = "VIF Values", horiz = TRUE, col = "steelblue")

#add vertical line at 5
abline(v = 5, lwd = 3, lty = 2)


knitr::kable(vif_values)
```
## Conocimiento del negocio
## Modelos no lineales e interacciones
## Variables Categoricas


Variable endógena: 
- Salario: log

Variables exógenas:  
- Edad (Age):  se presupone que a mayor edad mayor salario 
- Edad elevado alcuadrado: considero que a partir de cierta edad ya no aumenta el salario con la edad 
- Número del draft(NBA_DraftNumber): a menor número en el draft mayor salario 
- Minutos jugados (MP): a mayor númerode minutos jugados mayor salario 
- Minutos jugados al cuadrado: a partir de un cierto número de minutosjugados ya no aumenta el salario 
- Eficiencia del jugador: a mayor eficiencia mayor salario 
- Eficiencia deljugador al cuadrado: a partir de cierto nivel de eficiencia ya no afecta al salario 
- Contribución a las victorias del equipo: a mayor contribución a las victorias del equipo mayor salario 
- Contribución a las victorias del equipo al cuadrado: a partir de cierto nivel de aportación a las victorias del equipo ya no afecta al salario 
- Porcentaje de participación en el juego (USG%): A mayor participación mayor salario 
- Valor sobre jugadorde reemplazo (VORP): a mayor VORP mayor salario 
- Valor sobre jugador de reemplazo al cuadrado: a partir de cierto nivel de VORP ya no afecta al salario 
- Efectividad de tiro (TS%): a mayor efectividad de tiro mayor salario 
- Efectividad asistencias (AST%): a mayor efectividad de asistencias mayor salario 
- Interacciónde WS y VORP (WS:VORP): considero que están relacionadas estas dos variables, a mayores valores deWS y VORP mayor será el salario del jugadorA continuación se filtra la base de datos para poder observar sólo las variables que me interesan.





# Model Selection

```{r Regsubsets, fig.height = 10, fig.width =10, fig.align = "center"}

nba <- log_data %>% select_at(vars(-vars))

set.seed(1234)
num_data <- nrow(nba)
num_data_test <- 10
train=sample(num_data ,num_data-num_data_test)


data_train <- nba[train,]
data_test  <-  nba[-train,]

model_select <- regsubsets(salary~. , data =data_train, method = "seqrep",nvmax=24)

model_select_summary <- summary(model_select)

data.frame(
  Adj.R2 = (model_select_summary$adjr2),
  CP = (model_select_summary$cp),
  BIC = (model_select_summary$bic)
)

model_select_summary$outmat

plot(model_select, scale = "bic", main = "BIC")

data.frame(
  Adj.R2 = which.max(model_select_summary$adjr2),
  CP = which.min(model_select_summary$cp),
  BIC = which.min(model_select_summary$bic)
)
coef(model_select,which.min(model_select_summary$adjr2))
coef(model_select,which.min(model_select_summary$cp))
coef(model_select,which.min(model_select_summary$bic))
```
**“All models are wrong, some models are useful”, Box, G.E.P**


```{r}

# adjR2 model

nba_r2 <- lm(salary~ mp , data =data_train)
summary(nba_r2)
# CP model

nba_cp <- lm(salary~ nba_draft_number+age+mp+per+ts+f_tr+trb+ast+tov+usg+dws+ws_48+dbpm, data =data_train)
summary(nba_cp)

# BIC model

nba_bic <- lm(salary~ nba_draft_number+age+mp+drb, data =data_train)
summary(nba_bic)

```


```{r}

# Prediction

# adjR2
predict_r2 <- predict(nba_r2,newdata = data_test)
cbind(predict_r2,data_test$salary)
exp(cbind(predict_r2,data_test$salary))
mean((data_test$salary-predict_r2)^2)
sqrt(mean((data_test$salary-predict_r2)^2))

# CP
predict_cp <- predict(nba_cp,newdata = data_test)
cbind(predict_cp,data_test$salary)
exp(cbind(predict_cp,data_test$salary))
mean((data_test$salary-predict_cp)^2)
sqrt(mean((data_test$salary-predict_cp)^2))

# BIC
predict_bic <- predict(nba_bic,newdata = data_test)
cbind(predict_bic,data_test$salary)
exp(cbind(predict_bic,data_test$salary))
mean((data_test$salary-predict_bic)^2)
sqrt(mean((data_test$salary-predict_bic)^2))


```

